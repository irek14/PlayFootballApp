@model PlayFootballApp.BusinessLogic.Models.Home.FindEventsViewModel

@{
    ViewData["Title"] = "Wydarzenia";
}

@if (Model.Pitches.Count() != 0)
{
    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target=".multi-collapse" aria-expanded="false" aria-controls="filtersCollapse mapCollapse"><i class="fa fa-arrow-circle-down"></i> Opcje</button>
    <div class="row">
        <div class="col">
            <div class="collapse multi-collapse" id="filtersCollapse">
                <div class="card card-body">
                    <div class="form-group col-md-12 row">
                        <label class="control-label">Szukana liczba miejsc</label>
                        <input type="number" asp-for="Search.SpotNumber" value="1" min="1" disabled class="form-control" />
                    </div>
                    <div class="form-group col-md-12 row">
                        <label class="control-label">Od</label>
                        <input id="startDate" asp-for="Search.StartDate" type="date" disabled class="form-control" />
                    </div>
                    <div class="form-group col-md-12 row">
                        <label class="control-label">Do:</label>
                        <input id="endDate" asp-for="Search.EndDate" type="date" disabled class="form-control" />
                    </div>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-warning pull-right col-3">Zmień parametry</a>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="collapse multi-collapse" id="mapCollapse">
                <div class="card card-body">
                    <input id="localisationX" type="hidden" asp-for="Search.LocalisationX" />
                    <input id="localisationY" type="hidden" asp-for="Search.LocalisationY" />
                    <input id="closestPitch" type="hidden" asp-for="ClosestPitch" />
                    @if (Model.Search.LocalisationX != 0 && Model.Search.LocalisationY != 0)
                    {
                        <div class="row col-12">
                            <div class="col-4">
                                <h5>Wyznacz trasę do najbliszego boiska</h5>
                            </div>
                            <div class="col-6 row">
                            </div>
                            <div class="col-2">
                                <button type="button" onclick="RouteToClosest()" class="btn btn-success">Zastosuj</button>
                            </div>
                        </div>
                        <hr />
                        <div class="row col-12">
                            <div class="col-4">
                                <h5>Wyznacz trasę do wszystkich boisk</h5>
                            </div>
                            <div class="col-6 row">
                            </div>
                            <div class="col-2">
                                <button onclick="RouteToAll()" type="button" class="btn btn-info">Zastosuj</button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row col-12">
                            <div class="col-4">
                                <h5>Wyznacz trasę do najbliszego boiska</h5>
                            </div>
                            <div class="col-6 row">
                            </div>
                            <div class="col-2">
                                <button type="button" disabled class="btn btn-success">Zastosuj</button>
                            </div>
                        </div>
                        <hr />
                        <div class="row col-12">
                            <div class="col-4">
                                <h5>Wyznacz trasę do wszystkich boisk</h5>
                            </div>
                            <div class="col-6 row">
                            </div>
                            <div class="col-2">
                                <button type="button" disabled class="btn btn-info">Zastosuj</button>
                            </div>
                        </div>
                        <label>Aby odblokować opcje wyznaczania tras wprowadź swoją lokalizację</label>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 row mt-2">
        <div class="col-12 big-map" id="big-map"></div>
    </div>
    @foreach (var pitch in Model.Pitches)
    {
        <table id="HoursTable" class="table table-striped table-dark mt-3 col-12">
            <thead class="col-12">
                <tr class="col-12">
                    <th id="pitchName_@pitch.Order" class="col-8" scope="col">@pitch.PitchName</th>
                    <th class="col-2" scope="col">Liczba miejsc: @pitch.Spot</th>
                    <th class="col-2" scope="col">
                        <button id="showButton_@pitch.PitchId" onclick="ExpandPanel('@pitch.PitchId',@pitch.Order)" type="button" class="btn btn-success">
                            Pokaż szczegóły <i class="fa fa-arrow-circle-down"></i>
                        </button>
                        <button style="display:none" id="hideButton_@pitch.PitchId" onclick="HidePanel('@pitch.PitchId')" type="button" class="btn btn-danger">
                            Ukryj <i class="fa fa-arrow-circle-up"></i>
                        </button>
                    </th>
                </tr>
            </thead>
        </table>
        <div id="panel_@pitch.PitchId" class="col-12" style="display:none">
            <div class="m-0 row col-12">
                <div class="col-5">
                    <input class="localisation" id="localisation_@pitch.Order" type="hidden" value="@pitch.LocalisationX;@pitch.LocalisationY" />
                    <div class="small-map" id="smallMap_@pitch.Order"></div>
                </div>
                <div class="col-7">
                    <div class="col-12 row">
                        <div class="col-12 row">
                            <button class="btn btn-primary col-3" onclick="CheckRoute(@pitch.Order)" id="checkRoute_@pitch.Order" type="button">
                                <i class="fa fa-map-marked"></i> Wyznacz trasę
                            </button>
                            <div class="col-6 row" style="text-align:right">
                                <label class="col-9 col-form-label">Liczba miejsc:</label>
                                <input id="SpotNumber_@pitch.PitchId" type="number" class="col-3 form-control" value="1" min="1" max="@pitch.Spot" />
                            </div>
                        </div>
                        <table id="HoursTable" class="table col-12 m-1">
                            <thead class="col-12">
                                <tr class="col-12">
                                    <th class="col-3" scope="col">Data</th>
                                    <th class="col-2" scope="col">Godzina rozpoczęcia</th>
                                    <th class="col-2" scope="col">Godzina zakończenia</th>
                                    <th class="col-1" scope="col">Zarezerwowane miejsca</th>
                                    <th class="col-1" scope="col">Wolne miejsca</th>
                                    <th class="col-3" scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var avability in pitch.PitchAvability)
                                {
                                    <tr>
                                        <td>
                                            @avability.Date.ToShortDateString()
                                        </td>
                                        <td>
                                            @avability.StartHour
                                        </td>
                                        <td>
                                            @avability.EndHour
                                        </td>
                                        <td>
                                            @avability.ReservedSpot
                                        </td>
                                        <td>
                                            @avability.FreeSpot
                                        </td>
                                        <td>
                                            @if (avability.IsBookedByMy)
                                            {
                                                <button onclick="Resign('@avability.Id')" type="button" class="btn btn-danger">
                                                    <i class="fa fa-ban"></i> Zrezygnuj
                                                </button>
                                            }
                                            else
                                            {
                                                <button onclick="Reserve('@avability.Id','@avability.PitchId')" type="button" class="btn btn-success">
                                                    <i class="fa fa-check-circle"></i> Zarezerwuj
                                                </button>
                                            }
                                            <button onclick="GetWeather('@avability.Id')" class="btn btn-info mt-2" type="button"><i class="fa fa-cloud"></i> Sprawdź pogodę</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

        </div>
    }
}
else
{
    <h1>Nie znaleziono żadnych wyników</h1>
    <a class="btn btn-primary" asp-action="Index" asp-controller="Home"><i class="fa fa-sync"></i> Zmień parametry wyszukiwania</a>
}
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="weatherModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="weatherDescription"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group col-md-12 row">
                    <label class="col-3 label-success">Temperatura</label>
                    <label class="col-9" id="weatherTemperature"></label>
                </div>
                <div class="form-group col-md-12 row">
                    <label class="col-3 label-danger">Odczuwalna temperatura</label>
                    <label class="col-9" id="weatherSensedTemperature"></label>
                </div>
                <hr />
                <div class="form-group col-md-12 row">
                    <label class="col-3 label-success">Ciśnienie</label>
                    <label class="col-9" id="weatherPressure"></label>
                </div>
                <div class="form-group col-md-12 row">
                    <label class="col-3 label-success">Wilgotność</label>
                    <label class="col-9" id="weatherHumidity">24 C</label>
                </div>
                <div class="form-group col-md-12 row">
                    <label class="col-3 label-danger">Prędkość wiatru</label>
                    <label class="col-9" id="weatherWindSpeed"></label>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var mapsPlaceholder = new Array(@Model.Pitches.Count());
    var markers = [];
    var mainMap;

    $(document).ready(function () {
        var mymap = L.map('big-map').setView([52.222, 21.007], 10);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiaXJla2lzIiwiYSI6ImNrMnAyNmZhdjAyc2gzbXBsczJwMmlrNWgifQ.YUpHsfR2Kyp-K8cJD6rRHw'
        }).addTo(mymap);

        InitializeMainMap(mymap);
    });

    function InitializeMainMap(mymap) {
        for (var i = 0; i <@Model.Pitches.Count(); i++) {
            var localisation = $("#localisation_" + i).val();
            var name = $("#pitchName_" + i).text();

            var coordinates = localisation.split(";");
            coordinates[0] = coordinates[0].replace(",", ".");
            coordinates[1] = coordinates[1].replace(",", ".");
            var latlng = L.latLng(coordinates[0], coordinates[1]);

            var marker = L.marker(latlng).addTo(mymap);
            marker.bindPopup(name).addTo(mymap);
        }

        if ($("#localisationX").val() != 0 && $("#localisationY").val() != 0) {
            var locX = $("#localisationX").val() + "";
            var locY = $("#localisationY").val() + "";
            locX = locX.replace(",", ".");
            locY = locY.replace(",", ".");
            var latlng = L.latLng(locX, locY);

            var redIcon = new L.Icon({
                iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });

            var marker = L.marker(latlng, { icon: redIcon }).addTo(mymap);
            marker.bindPopup("Twoja lokalizacja").openPopup();

            mainMap = mymap;
        }
    }

    function ExpandPanel(id, mapNumber) {
        document.getElementById("panel_" + id).style.display = "block";
        document.getElementById("showButton_" + id).style.display = "none";
        document.getElementById("hideButton_" + id).style.display = "block";

        InitializeMap(mapNumber);
    }

    function HidePanel(id) {
        document.getElementById("panel_" + id).style.display = "none";
        document.getElementById("showButton_" + id).style.display = "block";
        document.getElementById("hideButton_" + id).style.display = "none";
    }

    function Reserve(id, pitchId) {
        var name = "#SpotNumber_" + pitchId;
        var spots = $("#SpotNumber_" + pitchId).val();

        var form = new FormData();
        form.append("id", id);
        form.append("spots", spots);

        var settings = {
          "async": true,
          "crossDomain": true,
          "url": "../Home/Reserve",
          "method": "POST",
          "headers": {
            "cache-control": "no-cache",
          },
          "processData": false,
          "contentType": false,
          "mimeType": "multipart/form-data",
          "data": form
        }

        $.ajax(settings).done(function (response) {
            if (JSON.parse(response) == "Ok") {
                window.location = "../Home/Index"
            }
            else if (JSON.parse(response) == "Error") {
                alert("Coś poszło nie tak");
                location.reload();
            }
        });
    }

    function Resign(id) {
        var form = new FormData();
        form.append("id", id);

        var settings = {
          "async": true,
          "crossDomain": true,
          "url": "Home/Resign",
          "method": "POST",
          "headers": {
            "cache-control": "no-cache",
          },
          "processData": false,
          "contentType": false,
          "mimeType": "multipart/form-data",
          "data": form
        }

        $.ajax(settings).done(function (response) {
            if (JSON.parse(response) == "Ok") {
                alert("Miejsca zostały dla Ciebie zarezerwowane");
                window.location = "Home/Index"
            }
            else if (JSON.parse(response) == "Error") {
                alert("Coś poszło nie tak");
                location.reload();
            }
        });
    }

    function InitializeMap(mapNumber) {
        debugger;
        if (mapsPlaceholder[mapNumber] != null)
            return;

        var localisation = $("#localisation_" + mapNumber).val();

        var coordinates = localisation.split(";");
        coordinates[0] = coordinates[0].replace(",", ".");
        coordinates[1] = coordinates[1].replace(",", ".");
        var latlng = L.latLng(coordinates[0], coordinates[1]);

        var mymap = L.map('smallMap_' + mapNumber).setView(latlng, 15);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiaXJla2lzIiwiYSI6ImNrMnAyNmZhdjAyc2gzbXBsczJwMmlrNWgifQ.YUpHsfR2Kyp-K8cJD6rRHw'
        }).addTo(mymap);

        L.marker(latlng).addTo(mymap);

        mapsPlaceholder[mapNumber] = mymap;
    }

    function CheckRoute(order) {
        if ($("#localisationX").val() == 0 && $("#localisationY").val() == 0) {
            alert("Nie podałeś swojej lokalizacji, więc nie jesteśmy w stanie wyznaczyć trasy");
            return;
        }

        var mymap = mapsPlaceholder[order];
        var locX = $("#localisationX").val() + "";
        var locY = $("#localisationY").val() + "";
        locX = locX.replace(",", ".");
        locY = locY.replace(",", ".");
        var mylatlng = L.latLng(locX, locY);

        var localisation = $("#localisation_" + order).val();
        var coordinates = localisation.split(";");
        coordinates[0] = coordinates[0].replace(",", ".");
        coordinates[1] = coordinates[1].replace(",", ".");
        var targetlatlng = L.latLng(coordinates[0], coordinates[1]);

        L.Routing.control({
            waypoints: [mylatlng, targetlatlng],
            draggableWaypoints: false,
            lineOptions: {
                styles: [{ color: 'green', opacity: 0.8, weight: 6 }]
            }
        }).addTo(mymap);

        var redIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        L.marker(mylatlng, { icon: redIcon }).addTo(mymap);

        mapsPlaceholder[order] = mymap;
    }

    function RouteToAll() {
        var colors = ['green', 'blue', 'fuchsia', 'yellow', 'maroon', 'lime', 'aqua', 'purple', 'olive', 'red', 'teal'];

        var mymap = mainMap;
        var locX = $("#localisationX").val() + "";
        var locY = $("#localisationY").val() + "";
        locX = locX.replace(",", ".");
        locY = locY.replace(",", ".");
        var mylatlng = L.latLng(locX, locY);

        for (var i = 0; i <@Model.Pitches.Count(); i++) {
            var localisation = $("#localisation_" + i).val();

            var coordinates = localisation.split(";");
            coordinates[0] = coordinates[0].replace(",", ".");
            coordinates[1] = coordinates[1].replace(",", ".");
            var targetlatlng = L.latLng(coordinates[0], coordinates[1]);

            L.Routing.control({
                waypoints: [mylatlng, targetlatlng],
                draggableWaypoints: false,
                lineOptions: {
                    styles: [{ color: colors[i % colors.length], opacity: 0.8, weight: 6 }]
                }
            }).addTo(mymap);
        }

        InitializeMainMap(mymap);
        mainMap = mymap;
    }

    function RouteToClosest() {
        var localisation = $("#closestPitch").val();

        var coordinates = localisation.split(", ");
        var targetlatlng = L.latLng(coordinates[0], coordinates[1]);

        var locX = $("#localisationX").val() + "";
        var locY = $("#localisationY").val() + "";
        locX = locX.replace(",", ".");
        locY = locY.replace(",", ".");
        var mylatlng = L.latLng(locX, locY);

        var mymap = mainMap;
        mymap.eachLayer(function (layer) {
            mymap.removeLayer(layer);
        });

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiaXJla2lzIiwiYSI6ImNrMnAyNmZhdjAyc2gzbXBsczJwMmlrNWgifQ.YUpHsfR2Kyp-K8cJD6rRHw'
        }).addTo(mymap);

        L.Routing.control({
            waypoints: [mylatlng, targetlatlng],
            draggableWaypoints: false,
            lineOptions: {
                styles: [{ color: 'red', opacity: 0.8, weight: 6 }]
            }
        }).addTo(mymap);

        InitializeMainMap(mymap);
    }
</script>

<script>
    function GetWeather(id) {

        var settings = {
            "async": true,
            "crossDomain": true,
            "url": "../Home/GetWeather/" + id,
            "method": "GET",
            "headers": {
                "cache-control": "no-cache",
            },
            "processData": false,
            "contentType": false,
            "mimeType": "multipart/form-data",
        }

        $.ajax(settings).done(function (response) {
            var weather = JSON.parse(response);
            const name = weather.description;
            const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1)

            $("#weatherDescription").text(nameCapitalized);
            $("#weatherTemperature").text(weather.temperature + " C");
            $("#weatherSensedTemperature").text(weather.sensedTemperature + " C");
            $("#weatherPressure").text(weather.pressure + " hPa");
            $("#weatherHumidity").text(weather.humidity + " %");
            $("#weatherWindSpeed").text(weather.windSpeed + " km/h");

            $('#weatherModal').modal('toggle');
        });
    }
</script>